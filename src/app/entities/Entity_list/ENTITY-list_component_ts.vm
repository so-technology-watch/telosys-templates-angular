#parse("../../../../include/entitiesNamesRef.vm")
// File generated by $generator.name ( version $generator.version ) - Date $today.date("yyyy-MM-dd") ( Time $today.time )

#set ( $LCentityName = $fn.uncapitalize($entity.name) )
#set ( $_entityService = "_" + $fn.uncapitalize($baseServiceName) )
// Modules imports
import { Component, OnInit, OnChanges, Input } from '@angular/core';
import { Router } from '@angular/router';
import { MdDialog } from '@angular/material';

// Services imports
import { PagerService } from './../../../services/pager.service';
import { EmitterService } from './../../../services/emitter.service';
import { NotificationService } from './../../../services/notification.service';
import { $baseServiceName } from './../services/$fn.uncapitalize($LCentityNameService)';

// Models imports
import { $entity.name } from '../$fn.uncapitalize($LCentityNameModel)';

// Components imports
import { DeleteDialogComponent } from './../../../delete-dialog/delete-dialog.component';

@Component({
  selector: 'app-${LCentityName}-list',
  templateUrl: './${LCentityName}-list.component.html',
  styleUrls: ['./${LCentityName}-list.component.css']
})
export class $listComponentName implements OnInit, OnChanges {

#set ( $listOfEntities = "listOf" + $entity.name + "s" )
  @Input() ${listOfEntities}: ${entity}[];
  @Input() listId: string;

  private title = 'List of ${entity}s';

  // pager object
  private pager: any = {};
  // paged items
  private pagedItems: any[];

  constructor(
    private $_entityService: $baseServiceName,
    private _router: Router,
    private _notificationService: NotificationService,
    private pagerService: PagerService,
    public dialog: MdDialog) { }

  ngOnInit() { }

  ngOnChanges(...args: any[]) {
    // if we have a list of $entity.name, set loading to false, otherwise show loading animation
    if (this.${listOfEntities}) {
      // initialize to page 1
      this.setPage(1);
    }
  }

#set( $editDeleteVariables = "" )
#set( $notifID = "" )
#if ($entity.keyAttributesCount > 1)
#foreach ($keyAttrib in $entity.keyAttributes)
#if( $foreach.count < $entity.keyAttributes.size() )
#set( $editDeleteVariables = $editDeleteVariables + "${LCentityName}ID${foreach.count}, " )
#set( $notifID = $notifID + "${DOLLAR}{${LCentityName}ID${foreach.count}}, " )
#else
#set( $editDeleteVariables = $editDeleteVariables + "${LCentityName}ID${foreach.count}" )
#set( $notifID = $notifID + "${DOLLAR}{${LCentityName}ID${foreach.count}}" )
#end
#end
#else
#set( $editDeleteVariables = "${LCentityName}ID" )
#set( $notifID = "${DOLLAR}{${LCentityName}ID}" )
#end
  edit${entity.name} = ($editDeleteVariables): void => {
    // Navigate to $LCentityName form component
    this.goTo${entity.name}Form(${editDeleteVariables});
  }

  delete${entity.name} = (${editDeleteVariables}): void => {
    // Call delete service
    this.${_entityService}.delete(${editDeleteVariables}).subscribe(
      result => {
        // Notify ${entity.name} list to refresh
        EmitterService.get(this.listId).emit(result);

        this._notificationService.success(
          'Deleted',
          `The $LCentityName entry with the id='${notifID}' was deleted successfuly`);
      },
      error => {
        console.error(error);
        this._notificationService.error(
          'Error',
          'An error occured when trying to reach the server');
      });
  }

#set( $paramAttrib = "" )
#set( $routerAtteib = "" )
#if ($entity.keyAttributesCount > 1)
#foreach ($keyAttrib in $entity.keyAttributes)
#if( $foreach.count < $entity.keyAttributes.size() )
#if ($keyAttrib.inputType == "text" )
#set( $paramAttrib = $paramAttrib + "id${foreach.count}: string, " )
#else
#set( $paramAttrib = $paramAttrib + "id${foreach.count}: ${keyAttrib.inputType}, " )
#end
#set( $routerAtteib = $routerAtteib + "id${foreach.count}, " )
#else
#if ($keyAttrib.inputType == "text" )
#set( $paramAttrib = $paramAttrib + "id${foreach.count}: string" )
#else
#set( $paramAttrib = $paramAttrib + "id${foreach.count}: ${keyAttrib.inputType}" )
#end
#set( $routerAtteib = $routerAtteib + "id${foreach.count}" )
#end
#end
#else
#if ($entity.keyAttribute.inputType == "text" )
#set( $paramAttrib = "id: string" )
#else
#set( $paramAttrib = "id: ${entity.keyAttribute.inputType}" )
#end
#set( $routerAtteib = "id" )
#end
  goTo${entity.name}Form($paramAttrib) {
    this._router.navigate(['./${LCentityName}-form', ${routerAtteib}]);
  }

  deleteConfirmation = (${editDeleteVariables}) => {
    const dialogRef = this.dialog.open(DeleteDialogComponent, {
      data: `$LCentityName: ${notifID}`
    });
    dialogRef.afterClosed().subscribe(result => {
      if (result) {
        this.delete${entity.name}(${editDeleteVariables});
      }
    });
  }

  setPage(page: number) {
    if (page < 1 || page > this.pager.totalPages) {
      return;
    }

    // get pager object from service
    this.pager = this.pagerService.getPager(this.${listOfEntities}.length, page);

    // get current page of items
    this.pagedItems = this.${listOfEntities}.slice(this.pager.startIndex, this.pager.endIndex + 1);
  }
}
